{"ast":null,"code":"var _jsxFileName = \"/Users/donghae/Desktop/Portfolio/EmotionDiary_React/src/pages/Diary.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useContext, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { DiaryStateContext } from \"./../App\";\nimport { getStringDate } from \"../util/date\";\nimport MyHeader from \"../components/MyHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Diary = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  // 전달 받은 id를 모아 객체로 반환\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n      if (targetDiary) {\n        // 일기가 존재할 때\n        setData(targetDiary);\n      } else {\n        // 일기가 없을 때\n        alert(\"존재하지 않는 일기에요.\");\n        navigate('/', {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList]);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: \"\\uB85C\\uB529 \\uC911\\uC785\\uB2C8\\uB2E4..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: /*#__PURE__*/_jsxDEV(MyHeader, {\n        headText: `${getStringDate(new Date(data.date))} 기록`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(Diary, \"GHqBxuwZ/RI84ZMN8TYIbTBgEas=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Diary;\nexport default Diary;\nvar _c;\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"names":["useState","useRef","useContext","useEffect","useParams","useNavigate","DiaryStateContext","getStringDate","MyHeader","jsxDEV","_jsxDEV","Diary","_s","id","diaryList","navigate","data","setData","length","targetDiary","find","it","parseInt","alert","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","headText","Date","date","_c","$RefreshReg$"],"sources":["/Users/donghae/Desktop/Portfolio/EmotionDiary_React/src/pages/Diary.js"],"sourcesContent":["import { useState, useRef, useContext, useEffect } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { DiaryStateContext } from \"./../App\"\nimport { getStringDate } from \"../util/date\"\nimport MyHeader from \"../components/MyHeader\"\n\nconst Diary = () => {\n\n  const { id } = useParams()\n  // 전달 받은 id를 모아 객체로 반환\n  const diaryList = useContext(DiaryStateContext)\n  const navigate = useNavigate()\n  const [data, setData] = useState()\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      )\n\n      if (targetDiary) {\n        // 일기가 존재할 때\n        setData(targetDiary)\n\n      } else {\n        // 일기가 없을 때\n        alert(\"존재하지 않는 일기에요.\")\n        navigate('/', { replace: true })\n      }\n    }\n  }, [id, diaryList])\n\n\n  if (!data) {\n    return <div className=\"DiaryPage\">로딩 중입니다..</div>\n  } else {\n    return <div className=\"DiaryPage\">\n      <MyHeader headText={`${getStringDate(new Date(data.date))} 기록`} />\n    </div>\n  }\n}\nexport default Diary"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,iBAAiB,QAAQ,UAAU;AAC5C,SAASC,aAAa,QAAQ,cAAc;AAC5C,OAAOC,QAAQ,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B;EACA,MAAMU,SAAS,GAAGZ,UAAU,CAACI,iBAAiB,CAAC;EAC/C,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,CAAC;EAElCG,SAAS,CAAC,MAAM;IACd,IAAIW,SAAS,CAACI,MAAM,IAAI,CAAC,EAAE;MACzB,MAAMC,WAAW,GAAGL,SAAS,CAACM,IAAI,CAC/BC,EAAE,IAAKC,QAAQ,CAACD,EAAE,CAACR,EAAE,CAAC,KAAKS,QAAQ,CAACT,EAAE,CACzC,CAAC;MAED,IAAIM,WAAW,EAAE;QACf;QACAF,OAAO,CAACE,WAAW,CAAC;MAEtB,CAAC,MAAM;QACL;QACAI,KAAK,CAAC,eAAe,CAAC;QACtBR,QAAQ,CAAC,GAAG,EAAE;UAAES,OAAO,EAAE;QAAK,CAAC,CAAC;MAClC;IACF;EACF,CAAC,EAAE,CAACX,EAAE,EAAEC,SAAS,CAAC,CAAC;EAGnB,IAAI,CAACE,IAAI,EAAE;IACT,oBAAON,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnD,CAAC,MAAM;IACL,oBAAOpB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,eAC/BhB,OAAA,CAACF,QAAQ;QAACuB,QAAQ,EAAG,GAAExB,aAAa,CAAC,IAAIyB,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAC,CAAE;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EACR;AACF,CAAC;AAAAlB,EAAA,CAlCKD,KAAK;EAAA,QAEMP,SAAS,EAGPC,WAAW;AAAA;AAAA6B,EAAA,GALxBvB,KAAK;AAmCX,eAAeA,KAAK;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}