{"ast":null,"code":"var _jsxFileName = \"/Users/donghae/Desktop/Portfolio/EmotionDiary_React/src/pages/Edit.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edit = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  // 현재 id 불러오기\n\n  const diaryList = useContext(DiaryStateContext);\n  console.log(id);\n  console.log(diaryList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC77C\\uAE30 \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n_s(Edit, \"H3G1u6DBuIy+NB2ucXpaIYkzQ/I=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Edit;\nexport default Edit;\n\n// useSearchParams를 통해 쿼리 스트링 처리, 배열을 반환\n// setSearchParams를 통해 쿼리 데이터 변경 가능\n// http://localhost:3000/edit?id=1999&mode=dark\n// const [searchParams, setSearchParams] = useSearchParams()\n// const id = searchParams.get('id')\n// console.log(\"id : \", id) // 1999\n// const mode = searchParams.get('mode')\n// console.log(\"mode : \", mode) // dark\n\n// useNavigate는 페이지를 이동할 수 있는 함수를 반환\n// navigate(\"경로\")\n// 의도적으로 페이지를 변경할 때 사용\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["useContext","useParams","useNavigate","DiaryStateContext","jsxDEV","_jsxDEV","Edit","_s","navigate","id","diaryList","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/donghae/Desktop/Portfolio/EmotionDiary_React/src/pages/Edit.js"],"sourcesContent":["import { useContext } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { DiaryStateContext } from \"../App\"\n\nconst Edit = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  // 현재 id 불러오기\n\n  const diaryList = useContext(DiaryStateContext)\n  console.log(id)\n  console.log(diaryList)\n\n  return <div>\n    <h2>일기 수정</h2>\n  </div>\n}\n\nexport default Edit\n\n\n  // useSearchParams를 통해 쿼리 스트링 처리, 배열을 반환\n  // setSearchParams를 통해 쿼리 데이터 변경 가능\n  // http://localhost:3000/edit?id=1999&mode=dark\n  // const [searchParams, setSearchParams] = useSearchParams()\n  // const id = searchParams.get('id')\n  // console.log(\"id : \", id) // 1999\n  // const mode = searchParams.get('mode')\n  // console.log(\"mode : \", mode) // dark\n\n  // useNavigate는 페이지를 이동할 수 있는 함수를 반환\n  // navigate(\"경로\")\n  // 의도적으로 페이지를 변경할 때 사용"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,iBAAiB,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B;;EAEA,MAAMS,SAAS,GAAGV,UAAU,CAACG,iBAAiB,CAAC;EAC/CQ,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;EACfE,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EAEtB,oBAAOL,OAAA;IAAAQ,QAAA,eACLR,OAAA;MAAAQ,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AACR,CAAC;AAAAV,EAAA,CAZKD,IAAI;EAAA,QACSJ,WAAW,EACbD,SAAS;AAAA;AAAAiB,EAAA,GAFpBZ,IAAI;AAcV,eAAeA,IAAI;;AAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}