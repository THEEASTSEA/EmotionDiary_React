{"ast":null,"code":"var _jsxFileName = \"/Users/donghae/Desktop/Portfolio/EmotionDiary_React/src/components/DiaryEditor.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\nimport MyHeader from \"./MyHeader\";\nimport MyButton from \"./MyButton\";\nimport EmotionItem from \"./EmotionItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst env = process.env;\nenv.PUBLIC_URL = env.PUBLIC_URL || \"\";\n\n// 감정 배열\nconst emotionList = [{\n  emotion_id: 1,\n  emotion_img: process.env.PUBLIC_URL + `/assets/5.png`,\n  emotion_descript: '매우 좋음'\n}, {\n  emotion_id: 2,\n  emotion_img: process.env.PUBLIC_URL + `/assets/4.png`,\n  emotion_descript: '좋음'\n}, {\n  emotion_id: 3,\n  emotion_img: process.env.PUBLIC_URL + `/assets/3.png`,\n  emotion_descript: '보통'\n}, {\n  emotion_id: 4,\n  emotion_img: process.env.PUBLIC_URL + `/assets/2.png`,\n  emotion_descript: '나쁨'\n}, {\n  emotion_id: 5,\n  emotion_img: process.env.PUBLIC_URL + `/assets/1.png`,\n  emotion_descript: '최악'\n}];\n\n// input 요소 날짜 기본값\nconst getStringDate = date => {\n  return date.toISOString().slice(0, 10);\n  // ISO 형식의 문자열을 반환, YYYY-MM-DDTHH...\n};\n\nconst DiaryEditor = () => {\n  _s();\n  const [emotion, setEmotion] = useState(3);\n  // 선택한 감정값 저장하는 State\n  const [date, setDate] = useState(getStringDate(new Date()));\n  // input 날짜 값을 저장하는 State\n  const contentRef = useRef();\n  const [content, setContent] = useState(\"\");\n  // 일기 내용 저장하는 state\n\n  const handleClickEmote = emotion => {\n    setEmotion(emotion);\n  };\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryEditor\",\n    children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n      headText: \"일기 쓰기\",\n      leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"<\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298 \\uB0A0\\uC9DC\\uB294?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input_date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD604\\uC7AC \\uAE30\\uBD84\\uC740?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box emotion_list_wrapper\",\n          children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem, {\n            ...it,\n            onClick: handleClickEmote,\n            isSelected: it.emotion_id === emotion\n          }, it.emotion_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uB0B4\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box text_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: contentRef,\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n_s(DiaryEditor, \"7n0dA8CtohPjwSbSBLw+h7uN9yg=\", false, function () {\n  return [useNavigate];\n});\n_c = DiaryEditor;\nexport default DiaryEditor;\nvar _c;\n$RefreshReg$(_c, \"DiaryEditor\");","map":{"version":3,"names":["useNavigate","useState","useRef","MyHeader","MyButton","EmotionItem","jsxDEV","_jsxDEV","env","process","PUBLIC_URL","emotionList","emotion_id","emotion_img","emotion_descript","getStringDate","date","toISOString","slice","DiaryEditor","_s","emotion","setEmotion","setDate","Date","contentRef","content","setContent","handleClickEmote","navigate","className","children","headText","leftChild","text","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","map","it","isSelected","ref","_c","$RefreshReg$"],"sources":["/Users/donghae/Desktop/Portfolio/EmotionDiary_React/src/components/DiaryEditor.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\nimport { useState, useRef } from \"react\"\n\nimport MyHeader from \"./MyHeader\"\nimport MyButton from \"./MyButton\"\nimport EmotionItem from \"./EmotionItem\"\n\nconst env = process.env\nenv.PUBLIC_URL = env.PUBLIC_URL || \"\"\n\n// 감정 배열\nconst emotionList = [\n  {\n    emotion_id: 1,\n    emotion_img: process.env.PUBLIC_URL + `/assets/5.png`,\n    emotion_descript: '매우 좋음'\n  },\n  {\n    emotion_id: 2,\n    emotion_img: process.env.PUBLIC_URL + `/assets/4.png`,\n    emotion_descript: '좋음'\n  },\n  {\n    emotion_id: 3,\n    emotion_img: process.env.PUBLIC_URL + `/assets/3.png`,\n    emotion_descript: '보통'\n  },\n  {\n    emotion_id: 4,\n    emotion_img: process.env.PUBLIC_URL + `/assets/2.png`,\n    emotion_descript: '나쁨'\n  },\n  {\n    emotion_id: 5,\n    emotion_img: process.env.PUBLIC_URL + `/assets/1.png`,\n    emotion_descript: '최악'\n  }\n]\n\n\n// input 요소 날짜 기본값\nconst getStringDate = (date) => {\n  return date.toISOString().slice(0, 10)\n  // ISO 형식의 문자열을 반환, YYYY-MM-DDTHH...\n}\n\n\nconst DiaryEditor = () => {\n  const [emotion, setEmotion] = useState(3)\n  // 선택한 감정값 저장하는 State\n  const [date, setDate] = useState(getStringDate(new Date()))\n  // input 날짜 값을 저장하는 State\n  const contentRef = useRef()\n  const [content, setContent] = useState(\"\")\n  // 일기 내용 저장하는 state\n\n  const handleClickEmote = (emotion) => {\n    setEmotion(emotion)\n  }\n\n\n  const navigate = useNavigate()\n  return <div className=\"DiaryEditor\">\n    <MyHeader headText={\"일기 쓰기\"} leftChild={<MyButton text={\"<\"} onClick={() => navigate(-1)} />} />\n\n    <div>\n      <section>\n        <h4>오늘 날짜는?</h4>\n        <div className=\"input_box\">\n          <input className=\"input_date\" value={date} onChange={(e) => setDate(e.target.value)} type=\"date\" />\n        </div>\n      </section>\n      <section>\n        <h4>현재 기분은?</h4>\n        <div className=\"input_box emotion_list_wrapper\">\n          {emotionList.map((it) => (\n            <EmotionItem\n              key={it.emotion_id} {...it}\n              onClick={handleClickEmote}\n              isSelected={it.emotion_id === emotion}\n            />\n          ))}\n        </div>\n      </section>\n      <section>\n        <h4>내용</h4>\n        <div className=\"input_box text_wrapper\">\n          <textarea ref={contentRef} value={content} onChange={(e) => setContent(e.target.value)} />\n        </div>\n      </section>\n    </div>\n  </div>\n}\n\nexport default DiaryEditor"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}