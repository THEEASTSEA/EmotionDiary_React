{"ast":null,"code":"var _jsxFileName = \"/Users/donghae/Desktop/Portfolio/EmotionDiary_React/src/pages/Diary.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Diary = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  // 전달 받은 id를 모아 객체로 반환\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n      if (targetDiary) {\n        // 일기가 존재할 때\n      } else {\n        // 일기가 없을 때\n      }\n    }\n  }, [id, diaryList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Diary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC774\\uACF3\\uC740 Diary\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_s(Diary, \"KN0Hul0Mi6fRMwL/a8KnDACYZZg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Diary;\nexport default Diary;\nvar _c;\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"names":["useContext","useEffect","useParams","useNavigate","DiaryStateContext","jsxDEV","_jsxDEV","Diary","_s","id","diaryList","navigate","length","targetDiary","find","it","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/donghae/Desktop/Portfolio/EmotionDiary_React/src/pages/Diary.js"],"sourcesContent":["import { useContext, useEffect } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { DiaryStateContext } from \"../App\"\n\nconst Diary = () => {\n\n  const { id } = useParams()\n  // 전달 받은 id를 모아 객체로 반환\n  const diaryList = useContext(DiaryStateContext)\n  const navigate = useNavigate()\n\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      )\n\n      if (targetDiary) {\n        // 일기가 존재할 때\n      } else {\n        // 일기가 없을 때\n      }\n    }\n  }, [id, diaryList])\n\n  return <div>\n    <h1>Diary</h1>\n    <p>이곳은 Diary입니다.</p>\n  </div>\n}\n\nexport default Diary"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,iBAAiB,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B;EACA,MAAMQ,SAAS,GAAGV,UAAU,CAACI,iBAAiB,CAAC;EAC/C,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAG9BF,SAAS,CAAC,MAAM;IACd,IAAIS,SAAS,CAACE,MAAM,IAAI,CAAC,EAAE;MACzB,MAAMC,WAAW,GAAGH,SAAS,CAACI,IAAI,CAC/BC,EAAE,IAAKC,QAAQ,CAACD,EAAE,CAACN,EAAE,CAAC,KAAKO,QAAQ,CAACP,EAAE,CACzC,CAAC;MAED,IAAII,WAAW,EAAE;QACf;MAAA,CACD,MAAM;QACL;MAAA;IAEJ;EACF,CAAC,EAAE,CAACJ,EAAE,EAAEC,SAAS,CAAC,CAAC;EAEnB,oBAAOJ,OAAA;IAAAW,QAAA,gBACLX,OAAA;MAAAW,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdf,OAAA;MAAAW,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AACR,CAAC;AAAAb,EAAA,CA1BKD,KAAK;EAAA,QAEML,SAAS,EAGPC,WAAW;AAAA;AAAAmB,EAAA,GALxBf,KAAK;AA4BX,eAAeA,KAAK;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}