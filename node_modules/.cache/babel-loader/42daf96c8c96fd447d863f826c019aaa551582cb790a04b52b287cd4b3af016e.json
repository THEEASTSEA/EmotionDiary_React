{"ast":null,"code":"var _jsxFileName = \"/Users/donghae/Desktop/Portfolio/EmotionDiary_React/src/pages/Edit.js\",\n  _s = $RefreshSig$();\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edit = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC77C\\uAE30 \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_s(Edit, \"xqNrWMz2XDR0DYvZC039aFe98pM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Edit;\nexport default Edit;\n\n// useSearchParams를 통해 쿼리 스트링 처리, 배열을 반환\n// setSearchParams를 통해 쿼리 데이터 변경 가능\n// http://localhost:3000/edit?id=1999&mode=dark\n// const [searchParams, setSearchParams] = useSearchParams()\n// const id = searchParams.get('id')\n// console.log(\"id : \", id) // 1999\n// const mode = searchParams.get('mode')\n// console.log(\"mode : \", mode) // dark\n\n// useNavigate는 페이지를 이동할 수 있는 함수를 반환\n// navigate(\"경로\")\n// 의도적으로 페이지를 변경할 때 사용\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["useParams","useNavigate","jsxDEV","_jsxDEV","Edit","_s","navigate","id","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/donghae/Desktop/Portfolio/EmotionDiary_React/src/pages/Edit.js"],"sourcesContent":["import { useParams, useNavigate } from \"react-router-dom\"\n\nconst Edit = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  console.log(id)\n\n  return <div>\n    <h2>일기 수정</h2>\n  </div>\n}\n\nexport default Edit\n\n\n  // useSearchParams를 통해 쿼리 스트링 처리, 배열을 반환\n  // setSearchParams를 통해 쿼리 데이터 변경 가능\n  // http://localhost:3000/edit?id=1999&mode=dark\n  // const [searchParams, setSearchParams] = useSearchParams()\n  // const id = searchParams.get('id')\n  // console.log(\"id : \", id) // 1999\n  // const mode = searchParams.get('mode')\n  // console.log(\"mode : \", mode) // dark\n\n  // useNavigate는 페이지를 이동할 수 있는 함수를 반환\n  // navigate(\"경로\")\n  // 의도적으로 페이지를 변경할 때 사용"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1BQ,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EAEf,oBAAOJ,OAAA;IAAAO,QAAA,eACLP,OAAA;MAAAO,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AACR,CAAC;AAAAT,EAAA,CARKD,IAAI;EAAA,QACSH,WAAW,EACbD,SAAS;AAAA;AAAAe,EAAA,GAFpBX,IAAI;AAUV,eAAeA,IAAI;;AAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}